import 'package:chem_x/Module/single_element_data.dart';
import 'package:chem_x/View/element_tile.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'dart:convert';
import 'package:flutter_screenutil/flutter_screenutil.dart';

class PeriodicTable extends StatefulWidget {
  PeriodicTable({Key? key}) : super(key: key);

  // final periodicList = rootBundle
  //     .loadString("assets/data/elementsData.json")
  //     .then((value) => jsonDecode(value)['myelements'] as List)
  //     .then((list) => list
  //     .map((json) => json != null ? Autogenerated.fromJson(json) : null)
  //     .toList());
  @override
  _PeriodicTableState createState() => _PeriodicTableState();
}

class _PeriodicTableState extends State<PeriodicTable> {
  List _items = [];

  // Fetch content from the json file
  Future<void> readJson() async {
    final String response = await rootBundle.loadString("assets/data/elementsData.json");
    final data = await json.decode(response);
    setState(() {
      _items = data["myelements"];
    });
  }
  void initState() {
    super.initState();
    // Call the readJson method when the app starts
    readJson();
  }
  _buildTable(List elements) {
    // final forGrid = elements
    //     .map(
    //       (element) => elements != null
    //           ? ElementTile(element: element!)
    //           : Container(
    //               margin: EdgeInsets.all(1.w),
    //               decoration: BoxDecoration(
    //                 borderRadius: BorderRadius.circular(10),
    //               ),
    //             ),
    //     )
    //     .toList();
    return Column(
      children: [
        // Display the data loaded from sample.json
        _items.isNotEmpty
            ? Expanded(
          child: ListView.builder(
            itemCount: _items.length,
            itemBuilder: (context, index) {
              return Card(
                key: ValueKey(_items[index]["name"]),
                margin: const EdgeInsets.all(10),
                color: Colors.amber.shade100,
                child: ListTile(
                  leading: Text(_items[index]["category"]),
                  title: Text(_items[index]["name"]),
                  subtitle: Text(_items[index]["name"]),
                ),
              );
            },
          ),
        )
            : Container(child: Text("ERROR"),)
      ],
    );

    //   SingleChildScrollView(
    //   child: SizedBox(
    //     height: 100,
    //     child: GridView.count(
    //       crossAxisCount: 10,
    //       children: <Widget>[...forGrid],
    //     ),
    //   ),
    // );

  }

  @override
  Widget build(BuildContext context) {

    return _items != null ? _buildTable(_items) : const Center(
                   child: CircularProgressIndicator(),
                 );

    // return FutureBuilder(
    //   future: _items,
    //   builder: (context, AsyncSnapshot snapshot) => snapshot.hasData
    //       ? _buildTable(snapshot.data)
    //       : const Center(
    //           child: CircularProgressIndicator(),
    //         ),
    // );
  }
}
